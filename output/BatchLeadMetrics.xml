<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<stac version="Version 0.5.2" filename="BatchLeadMetrics.cls" filepath="C:\Users\dhivya.sridhar\.jenkins\jobs\Testingbatchjenkins\workspace\NovaCopAutomation\SfSourceCode\classes" filesize="11 KB">
<class name="BatchLeadMetrics" sharing="default" implements="Database.batchable&lt;sobject&gt;,Database.stateful" isenum="false" lineno="16" modifiers="global">
<classbody>
<VariableDeclaration>
<varDeclaration name="totLeads" scope="methodvar" location="BatchLeadMetrics" type="string" lineno="18" />
<assignHeap name="totLeads" scope="methodvar" type="string" rhsType="value" rhs="&apos;totLeads&apos;" lineno="18" />
</VariableDeclaration>
<VariableDeclaration>
<varDeclaration name="closureRate" scope="methodvar" location="BatchLeadMetrics" type="string" lineno="19" />
<assignHeap name="closureRate" scope="methodvar" type="string" rhsType="value" rhs="&apos;closureRate&apos;" lineno="19" />
</VariableDeclaration>
<VariableDeclaration>
<varDeclaration name="aging" scope="methodvar" location="BatchLeadMetrics" type="string" lineno="20" />
<assignHeap name="aging" scope="methodvar" type="string" rhsType="value" rhs="&apos;aging&apos;" lineno="20" />
</VariableDeclaration>
<VariableDeclaration>
<varDeclaration name="totalQuarterLead" scope="methodvar" location="BatchLeadMetrics" type="string" lineno="21" />
<assignHeap name="totalQuarterLead" scope="methodvar" type="string" rhsType="value" rhs="&apos;totalQuarterLead&apos;" lineno="21" />
</VariableDeclaration>
<VariableDeclaration>
<varDeclaration name="currentQuarterCount" scope="methodvar" location="BatchLeadMetrics" type="integer" lineno="25" />
<assignHeap name="currentQuarterCount" scope="methodvar" type="integer" rhsType="value" rhs="0" lineno="25" />
</VariableDeclaration>
<VariableDeclaration>
<varDeclaration name="previousQuarterCount" scope="methodvar" location="BatchLeadMetrics" type="integer" lineno="26" />
<assignHeap name="previousQuarterCount" scope="methodvar" type="integer" rhsType="value" rhs="0" lineno="26" />
</VariableDeclaration>
<VariableDeclaration>
<methodInvoke name="map&lt;string,integer&gt;" methodtype="constructormethod" returntype="newobject" parameters="" returnloc="#temp519" lineno="29" />
<varDeclaration name="countbyLeadsource" scope="methodvar" location="BatchLeadMetrics" type="map&amp;lt;string,integer&amp;gt;" lineno="29" />
<assignHeap name="countbyLeadsource" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="newmap&lt;string,integer&gt;()" lineno="29" />
</VariableDeclaration>
<VariableDeclaration>
<methodInvoke name="map&lt;string,integer&gt;" methodtype="constructormethod" returntype="newobject" parameters="" returnloc="#temp520" lineno="30" />
<varDeclaration name="convertedCountbyLeadsource" scope="methodvar" location="BatchLeadMetrics" type="map&amp;lt;string,integer&amp;gt;" lineno="30" />
<assignHeap name="convertedCountbyLeadsource" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="newmap&lt;string,integer&gt;()" lineno="30" />
</VariableDeclaration>
<VariableDeclaration>
<methodInvoke name="map&lt;date,map&lt;string,integer&gt;&gt;" methodtype="constructormethod" returntype="newobject" parameters="" returnloc="#temp521" lineno="31" />
<varDeclaration name="countMap" scope="methodvar" location="BatchLeadMetrics" type="map&amp;lt;date,map&amp;lt;string,integer&amp;gt;&amp;gt;" lineno="31" />
<assignHeap name="countMap" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="newmap&lt;date,map&lt;string,integer&gt;&gt;()" lineno="31" />
</VariableDeclaration>
<VariableDeclaration>
<methodInvoke name="map&lt;date,map&lt;string,integer&gt;&gt;" methodtype="constructormethod" returntype="newobject" parameters="" returnloc="#temp522" lineno="32" />
<varDeclaration name="quarterCountMap" scope="methodvar" location="BatchLeadMetrics" type="map&amp;lt;date,map&amp;lt;string,integer&amp;gt;&amp;gt;" lineno="32" />
<assignHeap name="quarterCountMap" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="newmap&lt;date,map&lt;string,integer&gt;&gt;()" lineno="32" />
</VariableDeclaration>
<VariableDeclaration>
<methodInvoke name="List&lt;sobject&gt;" methodtype="constructormethod" returntype="newobject" parameters="" returnloc="#temp523" lineno="33" />
<varDeclaration name="oppCloseList" scope="methodvar" location="BatchLeadMetrics" type="List&amp;lt;sobject&amp;gt;" lineno="33" />
<assignHeap name="oppCloseList" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="newList&lt;sobject&gt;()" lineno="33" />
</VariableDeclaration>
<VariableDeclaration>
<varDeclaration name="d0" scope="methodvar" location="BatchLeadMetrics" type="date" lineno="35" />
<assignHeap name="d0" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="Util.d00" lineno="35" />
</VariableDeclaration>
<VariableDeclaration>
<varDeclaration name="d1" scope="methodvar" location="BatchLeadMetrics" type="date" lineno="36" />
<assignHeap name="d1" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="Util.d01" lineno="36" />
</VariableDeclaration>
<VariableDeclaration>
<varDeclaration name="d2" scope="methodvar" location="BatchLeadMetrics" type="date" lineno="37" />
<assignHeap name="d2" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="Util.d02" lineno="37" />
</VariableDeclaration>
<VariableDeclaration>
<varDeclaration name="d3" scope="methodvar" location="BatchLeadMetrics" type="date" lineno="38" />
<assignHeap name="d3" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="Util.d03" lineno="38" />
</VariableDeclaration>
<VariableDeclaration>
<varDeclaration name="d4" scope="methodvar" location="BatchLeadMetrics" type="date" lineno="39" />
<assignHeap name="d4" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="Util.d04" lineno="39" />
</VariableDeclaration>
<VariableDeclaration>
<varDeclaration name="d5" scope="methodvar" location="BatchLeadMetrics" type="date" lineno="40" />
<assignHeap name="d5" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="Util.d05" lineno="40" />
</VariableDeclaration>
<VariableDeclaration>
<varDeclaration name="d6" scope="methodvar" location="BatchLeadMetrics" type="date" lineno="41" />
<assignHeap name="d6" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="Util.d06" lineno="41" />
</VariableDeclaration>
<VariableDeclaration>
<methodInvoke name="#temp523.today" methodtype="normalmethod" returntype="String" parameters="" returnloc="#temp524" lineno="43" />
<varDeclaration name="dt" scope="methodvar" location="BatchLeadMetrics" type="date" lineno="43" />
<assignHeap name="dt" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="date.today()" lineno="43" />
</VariableDeclaration>
<VariableDeclaration>
<methodInvoke name="#temp524.month" methodtype="normalmethod" returntype="String" parameters="" returnloc="#temp525" lineno="44" />
<varDeclaration name="currentMnt" scope="methodvar" location="BatchLeadMetrics" type="integer" lineno="44" />
<assignHeap name="currentMnt" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="dt.month()" lineno="44" />
</VariableDeclaration>
<VariableDeclaration>
<methodInvoke name="lib.stradd" methodtype="constructormethod" returntype="String" parameters="1" returnloc="#temp526" lineno="45" />
<varDeclaration name="currentQ" scope="methodvar" location="BatchLeadMetrics" type="integer" lineno="45" />
<assignHeap name="currentQ" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="((currentMnt-1)/3)+1" lineno="45" />
</VariableDeclaration>
<VariableDeclaration>
<methodInvoke name="#temp526.year" methodtype="normalmethod" returntype="String" parameters="" returnloc="#temp527" lineno="47" />
<methodInvoke name="#temp526.newInstance" methodtype="normalmethod" returntype="String" parameters="dt.year(),currentMnt+(4-(currentMnt-((currentQ-2)*3))),1" returnloc="#temp528" lineno="47" />
<methodInvoke name="1.addDays" methodtype="normalmethod" returntype="String" parameters="-1" returnloc="#temp529" lineno="47" />
<methodInvoke name="lib.stradd" methodtype="constructormethod" returntype="String" parameters="#temp529" returnloc="#temp530" lineno="47" />
<varDeclaration name="d00" scope="methodvar" location="BatchLeadMetrics" type="date" lineno="47" />
<assignHeap name="d00" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="date.newInstance(dt.year(),currentMnt+(4-(currentMnt-((currentQ-2)*3))),1).addDays(-1)" lineno="47" />
</VariableDeclaration>
<VariableDeclaration>
<methodInvoke name="#temp530.year" methodtype="normalmethod" returntype="String" parameters="" returnloc="#temp531" lineno="48" />
<methodInvoke name="#temp530.newInstance" methodtype="normalmethod" returntype="String" parameters="dt.year(),currentMnt+(4-(currentMnt-((currentQ-3)*3))),1" returnloc="#temp532" lineno="48" />
<methodInvoke name="1.addDays" methodtype="normalmethod" returntype="String" parameters="-1" returnloc="#temp533" lineno="48" />
<methodInvoke name="lib.stradd" methodtype="constructormethod" returntype="String" parameters="#temp533" returnloc="#temp534" lineno="48" />
<varDeclaration name="d01" scope="methodvar" location="BatchLeadMetrics" type="date" lineno="48" />
<assignHeap name="d01" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="date.newInstance(dt.year(),currentMnt+(4-(currentMnt-((currentQ-3)*3))),1).addDays(-1)" lineno="48" />
</VariableDeclaration>
<VariableDeclaration>
<methodInvoke name="#temp534.year" methodtype="normalmethod" returntype="String" parameters="" returnloc="#temp535" lineno="49" />
<methodInvoke name="#temp534.newInstance" methodtype="normalmethod" returntype="String" parameters="dt.year(),currentMnt+(4-(currentMnt-((currentQ-4)*3))),1" returnloc="#temp536" lineno="49" />
<methodInvoke name="1.addDays" methodtype="normalmethod" returntype="String" parameters="-1" returnloc="#temp537" lineno="49" />
<methodInvoke name="lib.stradd" methodtype="constructormethod" returntype="String" parameters="#temp537" returnloc="#temp538" lineno="49" />
<varDeclaration name="d02" scope="methodvar" location="BatchLeadMetrics" type="date" lineno="49" />
<assignHeap name="d02" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="date.newInstance(dt.year(),currentMnt+(4-(currentMnt-((currentQ-4)*3))),1).addDays(-1)" lineno="49" />
</VariableDeclaration>
<VariableDeclaration>
<methodInvoke name="#temp538.year" methodtype="normalmethod" returntype="String" parameters="" returnloc="#temp539" lineno="50" />
<methodInvoke name="#temp538.newInstance" methodtype="normalmethod" returntype="String" parameters="dt.year(),currentMnt+(4-(currentMnt-((currentQ-5)*3))),1" returnloc="#temp540" lineno="50" />
<methodInvoke name="1.addDays" methodtype="normalmethod" returntype="String" parameters="-1" returnloc="#temp541" lineno="50" />
<methodInvoke name="lib.stradd" methodtype="constructormethod" returntype="String" parameters="#temp541" returnloc="#temp542" lineno="50" />
<varDeclaration name="d03" scope="methodvar" location="BatchLeadMetrics" type="date" lineno="50" />
<assignHeap name="d03" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="date.newInstance(dt.year(),currentMnt+(4-(currentMnt-((currentQ-5)*3))),1).addDays(-1)" lineno="50" />
</VariableDeclaration>
<VariableDeclaration>
<methodInvoke name="#temp542.year" methodtype="normalmethod" returntype="String" parameters="" returnloc="#temp543" lineno="51" />
<methodInvoke name="#temp542.newInstance" methodtype="normalmethod" returntype="String" parameters="dt.year(),currentMnt+(4-(currentMnt-((currentQ-6)*3))),1" returnloc="#temp544" lineno="51" />
<methodInvoke name="1.addDays" methodtype="normalmethod" returntype="String" parameters="-1" returnloc="#temp545" lineno="51" />
<methodInvoke name="lib.stradd" methodtype="constructormethod" returntype="String" parameters="#temp545" returnloc="#temp546" lineno="51" />
<varDeclaration name="d04" scope="methodvar" location="BatchLeadMetrics" type="date" lineno="51" />
<assignHeap name="d04" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="date.newInstance(dt.year(),currentMnt+(4-(currentMnt-((currentQ-6)*3))),1).addDays(-1)" lineno="51" />
</VariableDeclaration>
<VariableDeclaration>
<methodInvoke name="#temp546.year" methodtype="normalmethod" returntype="String" parameters="" returnloc="#temp547" lineno="52" />
<methodInvoke name="#temp546.newInstance" methodtype="normalmethod" returntype="String" parameters="dt.year(),currentMnt+(4-(currentMnt-((currentQ-7)*3))),1" returnloc="#temp548" lineno="52" />
<methodInvoke name="1.addDays" methodtype="normalmethod" returntype="String" parameters="-1" returnloc="#temp549" lineno="52" />
<methodInvoke name="lib.stradd" methodtype="constructormethod" returntype="String" parameters="#temp549" returnloc="#temp550" lineno="52" />
<varDeclaration name="d05" scope="methodvar" location="BatchLeadMetrics" type="date" lineno="52" />
<assignHeap name="d05" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="date.newInstance(dt.year(),currentMnt+(4-(currentMnt-((currentQ-7)*3))),1).addDays(-1)" lineno="52" />
</VariableDeclaration>
<VariableDeclaration>
<methodInvoke name="#temp550.year" methodtype="normalmethod" returntype="String" parameters="" returnloc="#temp551" lineno="53" />
<methodInvoke name="#temp550.newInstance" methodtype="normalmethod" returntype="String" parameters="dt.year(),currentMnt+(4-(currentMnt-((currentQ-8)*3))),1" returnloc="#temp552" lineno="53" />
<methodInvoke name="1.addDays" methodtype="normalmethod" returntype="String" parameters="-1" returnloc="#temp553" lineno="53" />
<methodInvoke name="lib.stradd" methodtype="constructormethod" returntype="String" parameters="#temp553" returnloc="#temp554" lineno="53" />
<varDeclaration name="d06" scope="methodvar" location="BatchLeadMetrics" type="date" lineno="53" />
<assignHeap name="d06" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="date.newInstance(dt.year(),currentMnt+(4-(currentMnt-((currentQ-8)*3))),1).addDays(-1)" lineno="53" />
</VariableDeclaration>
<VariableDeclaration>
<methodInvoke name="#temp554.year" methodtype="normalmethod" returntype="String" parameters="" returnloc="#temp555" lineno="55" />
<methodInvoke name="#temp554.newInstance" methodtype="normalmethod" returntype="String" parameters="dt.year(),currentMnt+(4-(currentMnt-((currentQ-1)*3))),1" returnloc="#temp556" lineno="55" />
<methodInvoke name="1.addDays" methodtype="normalmethod" returntype="String" parameters="-1" returnloc="#temp557" lineno="55" />
<methodInvoke name="lib.stradd" methodtype="constructormethod" returntype="String" parameters="#temp557" returnloc="#temp558" lineno="55" />
<varDeclaration name="d07" scope="methodvar" location="BatchLeadMetrics" type="date" lineno="55" />
<assignHeap name="d07" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="date.newInstance(dt.year(),currentMnt+(4-(currentMnt-((currentQ-1)*3))),1).addDays(-1)" lineno="55" />
</VariableDeclaration>
<VariableDeclaration>
<varDeclaration name="months" scope="methodvar" location="BatchLeadMetrics" type="List&amp;lt;date&amp;gt;" lineno="57" />
<assignHeap name="months" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="newList&lt;date&gt;{d1,d2,d3,d4,d5,d6}" lineno="57" />
</VariableDeclaration>
<VariableDeclaration>
<varDeclaration name="quarters" scope="methodvar" location="BatchLeadMetrics" type="List&amp;lt;date&amp;gt;" lineno="58" />
<assignHeap name="quarters" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="newList&lt;date&gt;{d00,d01,d02,d03,d04,d05}" lineno="58" />
</VariableDeclaration>
<curlybrace exists="true"/>
<AssignmentStatement>
<AssignmentStatement>
<assignHeap name="currentQuarterCount" scope="" type="" rhsType="methodinvoke" rhs="previousQuarterCount=0" lineno="62" />
</AssignmentStatement>
</AssignmentStatement>
<TryStatement lineno="64">
<body>
<curlybrace exists="true"/>
<loop type="simplefor" lineno="65">
<initialExpr>
<VariableDeclaration>
<varDeclaration name="i" scope="methodvar" location="BatchLeadMetrics" type="integer" lineno="65" />
<assignHeap name="i" scope="methodvar" type="integer" rhsType="value" rhs="1" lineno="65" />
</VariableDeclaration>
</initialExpr>
<conditionalExpr>
<ConditionalStatement LHStype="" LHS="i" RHStype="" RHS="6" Operator="&lt;="/>
</conditionalExpr>
<incrementExpr>
</incrementExpr>
<body>
<curlybrace exists="true"/>
<VariableDeclaration>
<varDeclaration name="n" scope="methodvar" location="BatchLeadMetrics" type="Map&amp;lt;string,integer&amp;gt;" lineno="67" />
<assignHeap name="n" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="newMap&lt;string,integer&gt;{totLeads=&gt;0,aging=&gt;0}" lineno="67" />
</VariableDeclaration>
</body>
</loop>
<loop type="advancedfor" lineno="70">
<Iterator type="date" name="currentDate" on="quarters">
</Iterator>
<body>
<curlybrace exists="true"/>
<VariableDeclaration>
<varDeclaration name="n" scope="methodvar" location="BatchLeadMetrics" type="map&amp;lt;string,integer&amp;gt;" lineno="72" />
<assignHeap name="n" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="newmap&lt;string,integer&gt;{totalQuarterLead=&gt;0}" lineno="72" />
</VariableDeclaration>
<methodInvoke name="quarterCountMap.put" methodtype="normalmethod" returntype="String" parameters="currentDate,n" returnloc="#temp563" lineno="73" />
</body>
</loop>
<loop type="advancedfor" lineno="75">
<methodInvoke name="lib.soql" methodtype="soqlmethod" returntype="String" parameters="[select count(id), LeadSource from opportunity where iswon = true and isclosed = true and createddate = LAST_N_Months:6 and leadsource !=null group by LeadSource]" returnloc="#temp564" lineno="75" />
<Iterator type="sobject" name="s" on="[select count(id), LeadSource from opportunity where iswon = true and isclosed = true and createddate = LAST_N_Months:6 and leadsource !=null group by LeadSource]">
</Iterator>
<body>
<curlybrace exists="true"/>
<methodInvoke name="oppCloseList.add" methodtype="normalmethod" returntype="String" parameters="s" returnloc="#temp565" lineno="76" />
</body>
</loop>
</body>
<CatchStatement type="Exception" name="e" lineno="78">
<body>
<curlybrace exists="true"/>
<methodInvoke name="util.ExceptionHandler" methodtype="normalmethod" returntype="String" parameters="e,&apos;BatchLeadMetrics&apos;,&apos;start&apos;" returnloc="#temp566" lineno="79" />
</body>
</CatchStatement>
</TryStatement>
<ReturnBlock>
<methodInvoke name="Database.getquerylocator" methodtype="normalmethod" returntype="String" parameters="&apos;select leadsource, createddate, ConvertedDate, isconverted from lead where createddate &gt;= :d03 and createddate &lt;: d07&apos;" returnloc="#temp567" lineno="82" />
<return expression="Database.getquerylocator(&apos;select leadsource, createddate, ConvertedDate, isconverted from lead where createddate &gt;= :d03 and createddate &lt;: d07&apos;)" expressiontype="@methodinvoke" lineno="82" />
</ReturnBlock>
<method returntype="void" name="execute" parameters="BC:Database.batchablecontext,scope:List&amp;lt;Lead&amp;gt;" isTestMethod="false" lineno="86" throws="" modifiers="public">
<body>
<TryStatement lineno="87">
<body>
<curlybrace exists="true"/>
<loop type="advancedfor" lineno="88">
<Iterator type="Lead" name="s" on="scope">
</Iterator>
<body>
<curlybrace exists="true"/>
<if type="simpleif" lineno="90">
<conditionalExpr>
<ConditionalStatement LHStype="" LHS="s.LeadSource" RHStype="" RHS="null" Operator="!="/>
</conditionalExpr>
<ifcondition expression= "s.LeadSource!=null"/>
<true>
<body>
<curlybrace exists="true"/>
<if type="simpleif" lineno="91">
<conditionalExpr>
<methodInvoke name="#temp567.containskey" methodtype="normalmethod" returntype="String" parameters="s.leadsource" returnloc="#temp568" lineno="91" />
</conditionalExpr>
<ifcondition expression= "countbyLeadsource.containskey(s.leadsource)"/>
<true>
<body>
<curlybrace exists="true"/>
<methodInvoke name="countbyLeadsource.get" methodtype="normalmethod" returntype="String" parameters="s.leadsource" returnloc="#temp569" lineno="92" />
<methodInvoke name="countbyLeadsource.put" methodtype="normalmethod" returntype="String" parameters="s.leadsource,countbyLeadsource.get(s.leadsource)+1" returnloc="#temp570" lineno="92" />
</body>
</true>
<false type="" lineno="93">
<body>
<curlybrace exists="true"/>
<methodInvoke name="countbyLeadsource.put" methodtype="normalmethod" returntype="String" parameters="s.leadsource,1" returnloc="#temp571" lineno="94" />
</body>
</false>
</if>
<if type="simpleif" lineno="96">
<conditionalExpr>
</conditionalExpr>
<ifcondition expression= "s.isConverted"/>
<true>
<body>
<curlybrace exists="true"/>
<if type="simpleif" lineno="97">
<conditionalExpr>
<methodInvoke name="convertedCountbyLeadsource.containskey" methodtype="normalmethod" returntype="String" parameters="s.leadsource" returnloc="#temp572" lineno="97" />
</conditionalExpr>
<ifcondition expression= "convertedCountbyLeadsource.containskey(s.leadsource)"/>
<true>
<body>
<curlybrace exists="true"/>
<methodInvoke name="convertedCountbyLeadsource.get" methodtype="normalmethod" returntype="String" parameters="s.leadsource" returnloc="#temp573" lineno="98" />
<methodInvoke name="convertedCountbyLeadsource.put" methodtype="normalmethod" returntype="String" parameters="s.leadsource,convertedCountbyLeadsource.get(s.leadsource)+1" returnloc="#temp574" lineno="98" />
</body>
</true>
<false type="" lineno="99">
<body>
<curlybrace exists="true"/>
<methodInvoke name="convertedCountbyLeadsource.put" methodtype="normalmethod" returntype="String" parameters="s.leadsource,1" returnloc="#temp575" lineno="100" />
</body>
</false>
</if>
</body>
</true>
</if>
</body>
</true>
</if>
<if type="simpleif" lineno="125">
<conditionalExpr>
<ConditionalStatement LHStype="" LHS="s.createddate" RHStype="" RHS="d0" Operator="&lt;"/>
<conditionalExpr>
<ConditionalStatement LHStype="" LHS="s.createddate" RHStype="" RHS="d1" Operator="&gt;="/>
<ConditionalStatement LHStype="variable" LHS="d1" RHStype="s.createddate&gt;=d1" RHS="s.createddate&gt;=d1" Operator="AND"/>
</conditionalExpr>
</conditionalExpr>
<ifcondition expression= "s.createddate&lt;d0&amp;&amp;s.createddate&gt;=d1"/>
<true>
<body>
<curlybrace exists="true"/>
<methodInvoke name="calc" methodtype="normalmethod" returntype="String" parameters="s,d1" returnloc="#temp576" lineno="126" />
</body>
</true>
<false type="" lineno="127">
<body>
<if type="elseif" lineno="127">
<conditionalExpr>
<ConditionalStatement LHStype="" LHS="s.createddate" RHStype="" RHS="d1" Operator="&lt;"/>
<conditionalExpr>
<ConditionalStatement LHStype="" LHS="s.createddate" RHStype="" RHS="d2" Operator="&gt;="/>
<ConditionalStatement LHStype="variable" LHS="d2" RHStype="s.createddate&gt;=d2" RHS="s.createddate&gt;=d2" Operator="AND"/>
</conditionalExpr>
</conditionalExpr>
<ifcondition expression= "s.createddate&lt;d1&amp;&amp;s.createddate&gt;=d2"/>
<true>
<body>
<curlybrace exists="true"/>
<methodInvoke name="calc" methodtype="normalmethod" returntype="String" parameters="s,d2" returnloc="#temp577" lineno="128" />
</body>
</true>
<false type="" lineno="129">
<body>
<if type="elseif" lineno="129">
<conditionalExpr>
<ConditionalStatement LHStype="" LHS="s.createddate" RHStype="" RHS="d2" Operator="&lt;"/>
<conditionalExpr>
<ConditionalStatement LHStype="" LHS="s.createddate" RHStype="" RHS="d3" Operator="&gt;="/>
<ConditionalStatement LHStype="variable" LHS="d3" RHStype="s.createddate&gt;=d3" RHS="s.createddate&gt;=d3" Operator="AND"/>
</conditionalExpr>
</conditionalExpr>
<ifcondition expression= "s.createddate&lt;d2&amp;&amp;s.createddate&gt;=d3"/>
<true>
<body>
<curlybrace exists="true"/>
<methodInvoke name="calc" methodtype="normalmethod" returntype="String" parameters="s,d3" returnloc="#temp578" lineno="130" />
</body>
</true>
<false type="" lineno="131">
<body>
<if type="elseif" lineno="131">
<conditionalExpr>
<ConditionalStatement LHStype="" LHS="s.createddate" RHStype="" RHS="d3" Operator="&lt;"/>
<conditionalExpr>
<ConditionalStatement LHStype="" LHS="s.createddate" RHStype="" RHS="d4" Operator="&gt;="/>
<ConditionalStatement LHStype="variable" LHS="d4" RHStype="s.createddate&gt;=d4" RHS="s.createddate&gt;=d4" Operator="AND"/>
</conditionalExpr>
</conditionalExpr>
<ifcondition expression= "s.createddate&lt;d3&amp;&amp;s.createddate&gt;=d4"/>
<true>
<body>
<curlybrace exists="true"/>
<methodInvoke name="calc" methodtype="normalmethod" returntype="String" parameters="s,d4" returnloc="#temp579" lineno="132" />
</body>
</true>
<false type="" lineno="133">
<body>
<if type="elseif" lineno="133">
<conditionalExpr>
<ConditionalStatement LHStype="" LHS="s.createddate" RHStype="" RHS="d4" Operator="&lt;"/>
<conditionalExpr>
<ConditionalStatement LHStype="" LHS="s.createddate" RHStype="" RHS="d5" Operator="&gt;="/>
<ConditionalStatement LHStype="variable" LHS="d5" RHStype="s.createddate&gt;=d5" RHS="s.createddate&gt;=d5" Operator="AND"/>
</conditionalExpr>
</conditionalExpr>
<ifcondition expression= "s.createddate&lt;d4&amp;&amp;s.createddate&gt;=d5"/>
<true>
<body>
<curlybrace exists="true"/>
<methodInvoke name="calc" methodtype="normalmethod" returntype="String" parameters="s,d5" returnloc="#temp580" lineno="134" />
</body>
</true>
<false type="" lineno="135">
<body>
<if type="elseif" lineno="135">
<conditionalExpr>
<ConditionalStatement LHStype="" LHS="s.createddate" RHStype="" RHS="d5" Operator="&lt;"/>
<conditionalExpr>
<ConditionalStatement LHStype="" LHS="s.createddate" RHStype="" RHS="d6" Operator="&gt;="/>
<ConditionalStatement LHStype="variable" LHS="d6" RHStype="s.createddate&gt;=d6" RHS="s.createddate&gt;=d6" Operator="AND"/>
</conditionalExpr>
</conditionalExpr>
<ifcondition expression= "s.createddate&lt;d5&amp;&amp;s.createddate&gt;=d6"/>
<true>
<body>
<curlybrace exists="true"/>
<methodInvoke name="calc" methodtype="normalmethod" returntype="String" parameters="s,d6" returnloc="#temp581" lineno="136" />
</body>
</true>
</if>
</body>
</false>
</if>
</body>
</false>
</if>
</body>
</false>
</if>
</body>
</false>
</if>
</body>
</false>
</if>
<if type="simpleif" lineno="139">
<conditionalExpr>
<ConditionalStatement LHStype="" LHS="s.createddate" RHStype="" RHS="d01" Operator="&gt;"/>
<conditionalExpr>
<ConditionalStatement LHStype="" LHS="s.createddate" RHStype="" RHS="d00" Operator="&lt;="/>
<ConditionalStatement LHStype="variable" LHS="d00" RHStype="s.createddate&lt;=d00" RHS="s.createddate&lt;=d00" Operator="AND"/>
</conditionalExpr>
</conditionalExpr>
<ifcondition expression= "s.createddate&gt;d01&amp;&amp;s.createddate&lt;=d00"/>
<true>
<body>
<curlybrace exists="true"/>
<methodInvoke name="calcQuarter" methodtype="normalmethod" returntype="String" parameters="s,d00" returnloc="#temp582" lineno="140" />
</body>
</true>
<false type="" lineno="142">
<body>
<if type="elseif" lineno="142">
<conditionalExpr>
<ConditionalStatement LHStype="" LHS="s.createddate" RHStype="" RHS="d02" Operator="&gt;"/>
<conditionalExpr>
<ConditionalStatement LHStype="" LHS="s.createddate" RHStype="" RHS="d01" Operator="&lt;="/>
<ConditionalStatement LHStype="variable" LHS="d01" RHStype="s.createddate&lt;=d01" RHS="s.createddate&lt;=d01" Operator="AND"/>
</conditionalExpr>
</conditionalExpr>
<ifcondition expression= "s.createddate&gt;d02&amp;&amp;s.createddate&lt;=d01"/>
<true>
<body>
<curlybrace exists="true"/>
<methodInvoke name="calcQuarter" methodtype="normalmethod" returntype="String" parameters="s,d01" returnloc="#temp583" lineno="143" />
</body>
</true>
</if>
</body>
</false>
</if>
</body>
</loop>
</body>
<CatchStatement type="Exception" name="e" lineno="147">
<body>
<curlybrace exists="true"/>
<methodInvoke name="util.ExceptionHandler" methodtype="normalmethod" returntype="String" parameters="e,&apos;BatchLeadMetrics&apos;,&apos;execute&apos;" returnloc="#temp584" lineno="148" />
</body>
</CatchStatement>
</TryStatement>
<methodendline lineno="150"/>
</body>
</method>
<method returntype="void" name="finish" parameters="BC:Database.batchablecontext" isTestMethod="false" lineno="153" throws="" modifiers="public">
<body>
<TryStatement lineno="154">
<body>
<curlybrace exists="true"/>
<VariableDeclaration>
<methodInvoke name="List&lt;AIES_ACCENTURE__AIESMetricData__c&gt;" methodtype="constructormethod" returntype="newobject" parameters="" returnloc="#temp585" lineno="156" />
<varDeclaration name="obj" scope="methodvar" location="BatchLeadMetrics" type="AIES_ACCENTURE__AIESMetricData__c[]" lineno="156" />
<assignHeap name="obj" scope="methodvar" type="newobject" rhsType="constructorInvoke" rhs="newList&lt;AIES_ACCENTURE__AIESMetricData__c&gt;()" lineno="156" />
</VariableDeclaration>
<VariableDeclaration>
<methodInvoke name="#temp585.getMetricMaster" methodtype="normalmethod" returntype="String" parameters="&apos;BP_Lead_Aging_Trend&apos;" returnloc="#temp586" lineno="158" />
<varDeclaration name="m" scope="methodvar" location="BatchLeadMetrics" type="AIES_ACCENTURE__AIESMetricMaster__c" lineno="158" />
<assignHeap name="m" scope="methodvar" type="AIES_ACCENTURE__AIESMetricMaster__c" rhsType="methodinvoke" rhs="Util.getMetricMaster(&apos;BP_Lead_Aging_Trend&apos;)" lineno="158" />
</VariableDeclaration>
<VariableDeclaration>
<varDeclaration name="i" scope="methodvar" location="BatchLeadMetrics" type="integer" lineno="159" />
<assignHeap name="i" scope="methodvar" type="integer" rhsType="value" rhs="1" lineno="159" />
</VariableDeclaration>
<loop type="advancedfor" lineno="160">
<Iterator type="date" name="d" on="months">
</Iterator>
<body>
<curlybrace exists="true"/>
<methodInvoke name="Util.monthName" methodtype="normalmethod" returntype="String" parameters="d" returnloc="#temp587" lineno="161" />
<methodInvoke name="#temp587.get" methodtype="normalmethod" returntype="String" parameters="d" returnloc="#temp588" lineno="161" />
<methodInvoke name="#temp588.get" methodtype="normalmethod" returntype="String" parameters="aging" returnloc="#temp589" lineno="161" />
<methodInvoke name="Util.createMetricData" methodtype="normalmethod" returntype="String" parameters="Util.monthName(d),countmap.get(d).get(aging),m,i" returnloc="#temp590" lineno="161" />
<methodInvoke name="obj.add" methodtype="normalmethod" returntype="String" parameters="Util.createMetricData(Util.monthName(d),countmap.get(d).get(aging),m,i)" returnloc="#temp591" lineno="161" />
</body>
</loop>
<VariableDeclaration>
<methodInvoke name="Util.getMetricMaster" methodtype="normalmethod" returntype="String" parameters="&apos;BP_Lead_count&apos;" returnloc="#temp592" lineno="165" />
<varDeclaration name="m1" scope="methodvar" location="BatchLeadMetrics" type="AIES_ACCENTURE__AIESMetricMaster__c" lineno="165" />
<assignHeap name="m1" scope="methodvar" type="AIES_ACCENTURE__AIESMetricMaster__c" rhsType="methodinvoke" rhs="Util.getMetricMaster(&apos;BP_Lead_count&apos;)" lineno="165" />
</VariableDeclaration>
<AssignmentStatement>
<assignHeap name="i" scope="" type="" rhsType="methodinvoke" rhs="1" lineno="166" />
</AssignmentStatement>
<loop type="advancedfor" lineno="167">
<methodInvoke name="countbyLeadsource.keySet" methodtype="normalmethod" returntype="String" parameters="" returnloc="#temp593" lineno="167" />
<Iterator type="string" name="d" on="countbyLeadsource.keySet()">
</Iterator>
<body>
<curlybrace exists="true"/>
<methodInvoke name="countbyLeadsource.get" methodtype="normalmethod" returntype="String" parameters="d" returnloc="#temp594" lineno="168" />
<methodInvoke name="Util.createMetricData" methodtype="normalmethod" returntype="String" parameters="d,countbyLeadsource.get(d),m1,i" returnloc="#temp595" lineno="168" />
<methodInvoke name="obj.add" methodtype="normalmethod" returntype="String" parameters="Util.createMetricData(d,countbyLeadsource.get(d),m1,i)" returnloc="#temp596" lineno="168" />
</body>
</loop>
<VariableDeclaration>
<methodInvoke name="Util.getMetricMaster" methodtype="normalmethod" returntype="String" parameters="&apos;BP_Lead_Conversion_rate&apos;" returnloc="#temp597" lineno="172" />
<varDeclaration name="m2" scope="methodvar" location="BatchLeadMetrics" type="AIES_ACCENTURE__AIESMetricMaster__c" lineno="172" />
<assignHeap name="m2" scope="methodvar" type="AIES_ACCENTURE__AIESMetricMaster__c" rhsType="methodinvoke" rhs="Util.getMetricMaster(&apos;BP_Lead_Conversion_rate&apos;)" lineno="172" />
</VariableDeclaration>
<AssignmentStatement>
<assignHeap name="i" scope="" type="" rhsType="methodinvoke" rhs="1" lineno="173" />
</AssignmentStatement>
<loop type="advancedfor" lineno="174">
<methodInvoke name="convertedCountbyLeadsource.keySet" methodtype="normalmethod" returntype="String" parameters="" returnloc="#temp598" lineno="174" />
<Iterator type="string" name="d" on="convertedCountbyLeadsource.keySet()">
</Iterator>
<body>
<curlybrace exists="true"/>
<methodInvoke name="countbyLeadsource.get" methodtype="normalmethod" returntype="String" parameters="d" returnloc="#temp599" lineno="175" />
<ConditionalStatement LHStype="" LHS="countbyLeadsource.get(d)" RHStype="" RHS="0" Operator="=="/>
<methodInvoke name="#temp599.get" methodtype="normalmethod" returntype="String" parameters="d" returnloc="#temp600" lineno="175" />
<methodInvoke name="#temp600.get" methodtype="normalmethod" returntype="String" parameters="d" returnloc="#temp601" lineno="175" />
<methodInvoke name="Util.createMetricData" methodtype="normalmethod" returntype="String" parameters="d,(countbyLeadsource.get(d)==0?0:(100*(convertedCountbyLeadsource.get(d)/countbyLeadsource.get(d)))),m2,i" returnloc="#temp602" lineno="175" />
<methodInvoke name="obj.add" methodtype="normalmethod" returntype="String" parameters="Util.createMetricData(d,(countbyLeadsource.get(d)==0?0:(100*(convertedCountbyLeadsource.get(d)/countbyLeadsource.get(d)))),m2,i)" returnloc="#temp603" lineno="175" />
</body>
</loop>
<VariableDeclaration>
<methodInvoke name="Util.getMetricMaster" methodtype="normalmethod" returntype="String" parameters="&apos;SM_BulletSalesVolInc&apos;" returnloc="#temp604" lineno="181" />
<varDeclaration name="m3" scope="methodvar" location="BatchLeadMetrics" type="AIES_ACCENTURE__AIESMetricMaster__c" lineno="181" />
<assignHeap name="m3" scope="methodvar" type="AIES_ACCENTURE__AIESMetricMaster__c" rhsType="methodinvoke" rhs="Util.getMetricMaster(&apos;SM_BulletSalesVolInc&apos;)" lineno="181" />
</VariableDeclaration>
<AssignmentStatement>
<methodInvoke name="quarterCountMap#temp604quarterCountMap.get" methodtype="normalmethod" returntype="String" parameters="d00" returnloc="#temp605" lineno="186" />
<methodInvoke name="#temp605.get" methodtype="normalmethod" returntype="String" parameters="totalQuarterLead" returnloc="#temp606" lineno="186" />
<assignHeap name="currentQuarterCount" scope="" type="" rhsType="methodinvoke" rhs="quarterCountMap.get(d00).get(totalQuarterLead)" lineno="186" />
</AssignmentStatement>
<AssignmentStatement>
<methodInvoke name="quarterCountMap.get" methodtype="normalmethod" returntype="String" parameters="d01" returnloc="#temp607" lineno="187" />
<methodInvoke name="#temp607.get" methodtype="normalmethod" returntype="String" parameters="totalQuarterLead" returnloc="#temp608" lineno="187" />
<assignHeap name="previousQuarterCount" scope="" type="" rhsType="methodinvoke" rhs="quarterCountMap.get(d01).get(totalQuarterLead)" lineno="187" />
</AssignmentStatement>
<ExpressionStatement expression="&apos;currentQuarterCount -- &gt; &apos;+currentQuarterCount" key="debug" lineno="188"/>
<ExpressionStatement expression="&apos;previousQuarterCount -- &gt; &apos;+previousQuarterCount" key="debug" lineno="189"/>
<VariableDeclaration>
<varDeclaration name="leadVolumeIncrease" scope="methodvar" location="BatchLeadMetrics" type="decimal" lineno="190" />
<assignHeap name="leadVolumeIncrease" scope="methodvar" type="decimal" rhsType="value" rhs="0.0" lineno="190" />
</VariableDeclaration>
<if type="simpleif" lineno="192">
<conditionalExpr>
<ConditionalStatement LHStype="" LHS="previousQuarterCount" RHStype="" RHS="0" Operator="&gt;"/>
</conditionalExpr>
<ifcondition expression= "previousQuarterCount&gt;0"/>
<true>
<body>
<curlybrace exists="true"/>
<AssignmentStatement>
<assignHeap name="leadVolumeIncrease" scope="" type="" rhsType="value" rhs="100" lineno="194" />
</AssignmentStatement>
</body>
</true>
</if>
<methodInvoke name="Util.createMetricData" methodtype="normalmethod" returntype="String" parameters="&apos;Key&apos;,leadVolumeIncrease,m3" returnloc="#temp609" lineno="197" />
<methodInvoke name="obj.add" methodtype="normalmethod" returntype="String" parameters="Util.createMetricData(&apos;Key&apos;,leadVolumeIncrease,m3)" returnloc="#temp610" lineno="197" />
<VariableDeclaration>
<methodInvoke name="Util.getMetricMaster" methodtype="normalmethod" returntype="String" parameters="&apos;BP_Opp_Won_Lead_Source&apos;" returnloc="#temp611" lineno="203" />
<varDeclaration name="m6" scope="methodvar" location="BatchLeadMetrics" type="AIES_ACCENTURE__AIESMetricMaster__c" lineno="203" />
<assignHeap name="m6" scope="methodvar" type="AIES_ACCENTURE__AIESMetricMaster__c" rhsType="methodinvoke" rhs="Util.getMetricMaster(&apos;BP_Opp_Won_Lead_Source&apos;)" lineno="203" />
</VariableDeclaration>
<ExpressionStatement expression="&apos;oppCloseList**********&apos;+oppCloseList" key="debug" lineno="204"/>
<AssignmentStatement>
<assignHeap name="i" scope="" type="" rhsType="value" rhs="1" lineno="205" />
</AssignmentStatement>
<if type="simpleif" lineno="206">
<conditionalExpr>
<ConditionalStatement LHStype="" LHS="oppCloseList" RHStype="" RHS="null" Operator="!="/>
</conditionalExpr>
<ifcondition expression= "oppCloseList!=null"/>
<true>
<body>
<curlybrace exists="true"/>
<loop type="advancedfor" lineno="208">
<Iterator type="sobject" name="o" on="oppCloseList">
</Iterator>
<body>
<curlybrace exists="true"/>
<methodInvoke name="o.get" methodtype="normalmethod" returntype="String" parameters="&apos;LeadSource&apos;" returnloc="#temp612" lineno="209" />
<methodInvoke name="string.valueof" methodtype="normalmethod" returntype="String" parameters="o.get(&apos;LeadSource&apos;)" returnloc="#temp613" lineno="209" />
<methodInvoke name="#temp613.get" methodtype="normalmethod" returntype="String" parameters="&apos;expr0&apos;" returnloc="#temp614" lineno="209" />
<methodInvoke name="#temp613.valueof" methodtype="normalmethod" returntype="String" parameters="o.get(&apos;expr0&apos;)" returnloc="#temp615" lineno="209" />
<methodInvoke name="#temp613.valueOf" methodtype="normalmethod" returntype="String" parameters="string.valueof(o.get(&apos;expr0&apos;))" returnloc="#temp616" lineno="209" />
<methodInvoke name="Util.createMetricData" methodtype="normalmethod" returntype="String" parameters="string.valueof(o.get(&apos;LeadSource&apos;)),decimal.valueOf(string.valueof(o.get(&apos;expr0&apos;))),m6,i" returnloc="#temp617" lineno="209" />
<methodInvoke name="obj.add" methodtype="normalmethod" returntype="String" parameters="Util.createMetricData(string.valueof(o.get(&apos;LeadSource&apos;)),decimal.valueOf(string.valueof(o.get(&apos;expr0&apos;))),m6,i)" returnloc="#temp618" lineno="209" />
</body>
</loop>
</body>
</true>
</if>
<methodInvoke name="lib.dml.upsert" methodtype="" returntype="" parameters="obj" returnloc="" lineno="214" />
</body>
<CatchStatement type="exception" name="e" lineno="216">
<body>
<curlybrace exists="true"/>
<methodInvoke name="util.exceptionHandler" methodtype="normalmethod" returntype="String" parameters="e,&apos;BatchLeadMetrics&apos;,&apos;finish&apos;" returnloc="#temp619" lineno="218" />
</body>
</CatchStatement>
</TryStatement>
<methodendline lineno="221"/>
</body>
</method>
<method returntype="void" name="calcQuarter" parameters="s:Lead,d:date" isTestMethod="false" lineno="222" throws="" modifiers="public">
<body>
<VariableDeclaration>
<methodInvoke name="quarterCountMap.get" methodtype="normalmethod" returntype="String" parameters="d" returnloc="#temp620" lineno="223" />
<varDeclaration name="quarterRec" scope="methodvar" location="BatchLeadMetrics" type="map&amp;lt;string,integer&amp;gt;" lineno="223" />
<assignHeap name="quarterRec" scope="methodvar" type="map&amp;lt;string,integer&amp;gt;" rhsType="variable" rhs="quarterCountMap.get(d)" lineno="223" />
</VariableDeclaration>
<methodInvoke name="quarterRec.get" methodtype="normalmethod" returntype="String" parameters="totalQuarterLead" returnloc="#temp621" lineno="224" />
<methodInvoke name="quarterRec.put" methodtype="normalmethod" returntype="String" parameters="totalQuarterLead,quarterRec.get(totalQuarterLead)+1" returnloc="#temp622" lineno="224" />
<methodInvoke name="quarterCountMap.put" methodtype="normalmethod" returntype="String" parameters="d,quarterRec" returnloc="#temp623" lineno="226" />
<methodendline lineno="227"/>
</body>
</method>
<method returntype="void" name="calc" parameters="s:Lead,d:date" isTestMethod="false" lineno="228" throws="" modifiers="public">
<body>
<VariableDeclaration>
<methodInvoke name="countmap.get" methodtype="normalmethod" returntype="String" parameters="d" returnloc="#temp624" lineno="230" />
<varDeclaration name="monthRec" scope="methodvar" location="BatchLeadMetrics" type="map&amp;lt;string,integer&amp;gt;" lineno="230" />
<assignHeap name="monthRec" scope="methodvar" type="map&amp;lt;string,integer&amp;gt;" rhsType="variable" rhs="countmap.get(d)" lineno="230" />
</VariableDeclaration>
<methodInvoke name="monthRec.get" methodtype="normalmethod" returntype="String" parameters="totLeads" returnloc="#temp625" lineno="232" />
<methodInvoke name="monthRec.put" methodtype="normalmethod" returntype="String" parameters="totLeads,monthRec.get(totLeads)+1" returnloc="#temp626" lineno="232" />
<if type="simpleif" lineno="235">
<conditionalExpr>
</conditionalExpr>
<ifcondition expression= "s.isConverted"/>
<true>
<body>
<curlybrace exists="true"/>
<methodInvoke name="monthRec.get" methodtype="normalmethod" returntype="String" parameters="aging" returnloc="#temp627" lineno="236" />
<methodInvoke name="" methodtype="normalmethod" returntype="String" parameters=".date(" returnloc="#temp628" lineno="236" />
<methodInvoke name="#temp628.daysbetween" methodtype="normalmethod" returntype="String" parameters="s.ConvertedDate" returnloc="#temp629" lineno="236" />
<methodInvoke name="#temp627.createddate" methodtype="normalmethod" returntype="String" parameters="aging,monthRec.get(aging)+s.createddate.date().daysbetween(s.ConvertedDate)" returnloc="#temp630" lineno="236" />
</body>
</true>
</if>
<methodInvoke name="countMap.put" methodtype="normalmethod" returntype="String" parameters="d,monthRec" returnloc="#temp631" lineno="240" />
<methodendline lineno="242"/>
</body>
</method>
</classbody>
</class>
<comments single="[22, 23, 24, 47, 48, 49, 50, 54, 55, 63, 81, 142, 179, 183, 184, 193, 238, 239]" multi="[1-14, 102-107, 110-124, 199-202, 234-234]" empty="[13, 15, 17, 27, 28, 34, 42, 46, 56, 59, 61, 66, 71, 83, 85, 89, 138, 145, 151, 152, 157, 164, 171, 178, 180, 182, 185, 191, 196, 198, 213, 219, 225, 229, 231, 233, 241]" singlebrace="[69, 74, 77, 80, 84, 95, 101, 108, 109, 123, 137, 141, 144, 146, 149, 150, 155, 163, 170, 177, 195, 207, 211, 212, 215, 217, 220, 221, 227, 237, 242, 243]"/>
</stac>
